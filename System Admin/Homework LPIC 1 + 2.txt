Homework LPIC 1 + 2 
Lesson 2 - Exploring Linux Command-Line Tools - Part 1

II. Basic Commands
1. Display the system's date.
date

2. Display the whole calendar for the year 2003.
cal 2003

3. Display the month of January for the years 1999 and 99. Are 1999 and 99 the same?
The same

4. There are two commands that will display information about all users currently on the local system. Display who is currently logged in on your system. Check to see when they logged in.
who -a
finger (phải cài thêm)

5. Display just your login name.
whoami

6. Use the echo command to write the character string Out to Lunch to your display.
echo Out to Lunch

7. Use the clear command to clear your screen.
clear


8. Login to the system.


9. Using the pwd command, verify that you are in your home directory, /home/student, the directory where you are placed when you first login.
pwd 

10. Change your current directory to the root directory (/).
cd / 

11. Verify that you are in the root directory and then execute both a simple and a long listing of the files in that directory.
pwd
ls -l
ls 

12. Issue the ls command with the -a and the -R options. What is the effect of each option?
(Note: The Is -R will provide extensive output. Once you have seen enough, do the key sequence <Ctri-c> to end the command.)
ls -aR 
-a hiển thị all(tẩt cả)
-R hiển thị cả file bên tronng từng folder

13. Return to your home directory (/home/student) and list its contents including hidden files
cd 
cd /home/student
ls -al

14. Bring up the man pages for the man command. Read the text that follows to obtain a better understanding of the functionality of the man command.
Remember to use the space bar to go forward one screen and the return key to go forward one line. Press the b key to go back one screen. When you have read enough, exit man using the q key or <Ctrl-c>
man man 

15. Using the man command, search on the keyword calendar. From the list produced, find the command that displays a calendar.
man -k calendar

16. Having found the cal command from the previous step, use man without any options to obtain the correct syntax of the command.
man cal

17. List the previous command you've already run
history

18. Re-run the 20th command
!20

19. Delete the 20th command from your history
history -d 20

20. Clear all history
history -c 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 3 - Exploring Linux Command-Line Tools - Part 2

1. Ensure that you are in your home directory. Create a file in your home directory named vitest.
pwd
vim vitest

2. When you open a vim file, you are automatically placed in command mode. Press the i key (insert) to switch to input (text) mode. You can also press the a key (append).
Use of i or a simply determines if typing starts before or after the cursor.
There is no indication to tell you that you are in input mode.
Switch from input mode to command mode by pressing the ESC key. Press ESC a second time. Notice that if you press ESC twice, you will get a "beep" from the terminal (some ASCII terminals do not beep). 
The beep indicates that you are in command mode already. Now press i again to put you back in input mode.
Continue to the next step.
i or a: input mode
Esc : switch command mode

3. Input the following text EXACTLY as it is presented line by line. Then key in the alphabet, one character per line. Following will show a-d but continue on through z. 
Adding the alphabet is an easy way to fill a couple of screens of information needed for later use.

This is a training session about the usage of the vim editor.
We need some more lines to learn the most common commands of the editor. We are now in the entry mode and we will switch right after this to the command mode.
    a
    b
    c
    d
    .
    .
    .
    .
    z

4. Return to command mode. Write and quit the file. Notice that as soon as you press the : (colon), it appears below the last line of your input area. Once the buffer is
empty and the file is closed, you will see a message giving the number of linesand characters in the file.
Esc
:wq


Cursor Movement Keys
5. Open vimtest using vim.
vim vimtest

6. Using both the arrow keys and the h, j, k, l keys, practice moving the cursor down one line, up one line, right a couple characters, and back a couple characters.
h : sang trái 
l : sang phải
j : xuống 
k : lên 

7. You may not want to cursor one character or one line at a time throughout an entire file. Practice using cursor movement keys to work around by page or by line. 
Using the cursor movement keys from instruction 6, position your cursor at the first line of the file. While in command mode, do the following:
    i. Move cursor to last line in the file
        G
    ii. Move cursor to first line in the file
        gg hoặc 1G hoặc 1gg hoặc :1
    iii. Move cursor to line 4 of the file
        4gg hoặc 4G hoặc :4
    iv. Move cursor to end of line
        $
    v. Move cursor to beginning of line
        0

8. Move your cursor to the top of the file. Search for the word entry. Your cursor
should be on the e. Switch to input mode and add the word text. Don't forget the
space after the word.
gg
/entry
i ( chuyển mode)

9. Move the cursor to the space after the word mode on the same line. Insert a
comma. Remember, you are still in input mode.
Esc (chuyển mode)
$
i (chuyển mode)
.

10.Enter command mode. Position the cursor anywhere on the line beginning with
"some more lines." Insert a blank line to form two paragraphs.
Esc
/some more lines
i
o

11.Opening up a blank line as in the previous step, automatically puts you in input
mode; therefore, return to command mode. Now save the changes you have made
so far, but DON'T exit the editor.
:w

12.While still in command mode, remove the alphabetic characters c,e,g but leave
the blank lines in their place; in other words, don't delete the entire line, just the
character. Then go back and remove the blank lines. This will give you practice
using two of the delete functions.
x (Để xóa 1 ký tự)
dd (Để xóa dòng trắng)

13.You just decided you really don't want to save the changes to the alphabetic
characters. Quit the editing session without saving the changes made since the
last save.
:q!

14.Edit vimtest one more time. First, copy the first paragraph one line at a time to
the end of the file. When that is complete, copy the second paragraph all at once
to the end of the file.
con trỏ sau khi mở ở dòng 1, ấn yy sau đó G rồi p
chuyển sang dòng 2: 2gg , ấn yy sau đó G rồi p
tương tự là 3gg 4gg, ...

15.You just decided that the lines you just added to the end of file don't look right.
Delete them all with one command.
Chuyển con trỏ đến dòng muốn bắt đầu xóa 
đếm số dòng cần xóa (liên tiếp) rồi 4dd

16.Now, before you do anything else with this file, you decide you need to imbed the
current date and time as the first line of the file. Do this without leaving the vim
editor.
:r!date

17.Using vim create the following files
- string.txt with the following content:
    Alpha
    Tango
    Bravo
    Echo
    Foxtrot
- number.txt with the following content:
    135
    178
    238
    982
    911
Process text file utilities

18.Using cat command to view the content of string.txt file.
cat string.txt

19.Display the content of string.txt and number.txt files to the screen
cat string.txt number.txt

20.Using od to display the content of string.txt in octal
od string.txt

21.Split the vimtest file to files with maximum of 4 line each
split -l 4 vitest

22.Sort the content of string.txt in alphabetical order and sort the numbers in
number.txt from the smallest to the biggest.
sort -d string.txt
sort -n number.txt

23.Display the string.txt content to screen with line number, not including blank lines.
nl string.txt (ko đếm dòng trắng)
cat -n (tính cả dòng trắng)

24.Use less and more to view the content of /var/log/messages, move next and back
accross pages. You need to use sudo to gain the superuser previleges.
 sudo less /var/log/messages (more)

25.View the content of /var/log/messages again but using the head and tail.
sudo head  /var/log/messages (more)

26.Display the content of /var/log/messages in real-time with tail. Use Ctrl+C to escape
sudo tail -f /var/log/messages

27.Count the number of lines in /etc/passwd file, is that the number of users created on server?
wc -l /etc/passwd

28.Display only the username from the /etc/passwd
cut -d ":" -f 1 /etc/passwd

29.Create the hash using md5 and sha512 algorithm for the number.txt file. Create a new file with the same content of number.txt, name it number1.txt. 
Hashing the number1.txt and compare with the hash value of number.txt.

md5sum number.txt
sha512sum number.txt
vim number1.txt
:r number.txt
:wq
md5sum number1.txt
sha512sum number1.txt


-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Lesson 3 - Exploring Linux Command-Line Tools - Part 3

The Grep Command

1. Find the line in the /etc/passwd file for user name that start with student.
cat /etc/passwd | grep student hoặc grep student /etc/passwd

2. Find all lines in the /etc/passwd file that begin with the letter st.
cat /etc/passwd | grep ^st

3. Find all lines in /etc/passwd that contain a digit 0-9.
cat /etc/passwd | grep [0-9]

4. Repeat the search in the previous instruction, but this time display only the number of lines that contain the pattern.
cat /etc/passwd | grep -c [0-9]

5. Use the ps and grep commands to display the processes initiated by users other than yourself.
ps -ef | grep -v student

6. Create a file with the content as follow, name it anything you want:

        Fred apples 20
        Susy oranges 5
        Mark watermelons 12
        Robert pears 4
        Terry oranges 9
        Lisa peaches 7
        Susy oranges 12
        Mark grapes 39
        Anne mangoes 7
        Greg pineapples 3
        Oliver rockmellons 2
        Betty limes 14
Do the below exercises with this file.

vim test.txt
i(chuyển mode)
paste văn bản vào
Esc rồi :wq để lưu

7. Find all the lines with string mellon
cat test.txt | grep mellon

8. Find all the lines end with the character 2
grep '2$' test.txt

9. Find all the people with the name begin with the letter from A to L
grep '^[A-L]' test.txt

10. Count the number of lines that contain apple
grep -c 'apple' test.txt


Use streams, pipes and redirects

11. Using the cat command and redirection, create a file called junk containing a few lines of text. 
Use <ctrl-d> at the beginning of a new line when you have finished entering text and want to return the shell $ prompt.
cat > junk 
typing something
Crtl + D to return shell

12. Append more lines of text to the file you have created using the cat command and redirection.
cat >> junk
typing something
Crtl + D to return shell

13. Using the ls command, list the files in your current directory. Make a note of the number of files.------------ có 2 file 
ls 

14. List the files in your current directory, but this time redirect the output to the file temp.
ls > temp

15. Use the appropriate command to count the number of words in the temp file. Is this the same count as in instruction 11?
- If not, why not? Display the contents of temp. Remove the file. not the same because it is result of ls command
wc -w temp 
rm temp

16. This time use a pipe to count the number of files in your current directory. Was the result what you expected this time?
-Is it the same as in instruction 11?
ls | wc -w 

17. Display all the content of the file you created at exercise 6, but find and replace all the oranges to apples
cat test.txt | sed '/s/oranges/apple/g'

18. Using xargs and $() to generate the ls -l command to all the file inside your home directory that have string te in the file name
ls | grep te | xargs ls -l
hoặc ls -l $(ls | grep te)
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Lesson 4: Managing Software and Processes Part 1

I. Using RPM package management

1. Login to the CentOS server with user student.
cred: student/lpic1@123

2. Mount the cdrom to the /mnt directory with the following command
$ sudo mount -o ro /dev/sr0 /mnt

3. Check if the cdrom is mounted with the following command
$ df -h  | grep /mnt

4. Change directory to /mnt/Packages
cd /mnt/Packages

5. Using rpm to install the nano package in verbose mode with the progress information of the installation.
sudo rpm -ivh nano.2..... (dùng tab để gọi tên package đầy đủ)

6. Using rpm to show the path to config file of nano
sudo rpm -qc nano (application nano khác với nano.2.1..... là package name)

7. Add some text into the above config file of nano, using rpm to verify the nano package. Does it show anything?
vim /etc/nanorc
i (chuyển mode)
add some text
Esc rồi :wq! (! do read only)

sudo rpm -V nano 
có show khác biệt nhé 

8. Remove the changes you made in exercise 7 and re-verify the nano package. The problem is fixed or not?
no fix 

9. Using rpm to display the information of nano package
sudo rpm -qi nano 

10. Using rpm to list all the package that installed on you system
sudo rpm -qa | more


II. Using YUM

11. Change directory to /etc/yum.repos.d/ and move all file to the orgn directory using the following command
$ sudo mv * orgn/
cd /etc/yum.repos.d
sudo mv * orgn/

12. Create a file with vim inside the /etc/yum.repos.d/ directory, named it rhel.repo, input the following content and save it.
    [DVD]
    name=Local repository from DVD
    baseurl-file:///mnt
    enabled=1

cd /etc/yum.repos.d 
vim rhel.repo
paste data to file 
Esc rồi :wq

13. Using yum to search and install emacs
sudo yum search emacs
sudo yum install emacs

14. Using yum to display the infomation of nano package
sudo yum info  nano

15. Using yum to remove emacs and nano
sudo yum remove nano emacs

IV. Using dpkg and apt suite package manager

16. Login to the Ubuntu server with student.
cred: student/lpic1@123

17. Using dpkg to list all the package installed on your system
sudo dpkg -l | more

18. Using apt suite tools to search for and install the emacs and nano
sudo apt search emacs | grep ^emacs
sudo apt install emacs

sudo apt search nano | grep ^nano
sudo apt install nano

19. List all the files of the emacs package
sudo apt show emacs

20. Using apt suite to remove the nano and emacs package.
sudo apt remove emacs nano

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Lesson 4: Managing Software and Processes Part 2

I. Prepare the environment

1. Login to the ubuntu server and install the screen and tux package
cred: student/lpic1@123
sudo apt install tmx screen

II. Managing the shared library

1. Login to the ubuntu server as student.
cred: student/lpic1@123

2. Show all the libraries existed in the server and re-create the library cache
sudo ldconfig -v | more

3. Show all the libraries in library cache, how many libs found in the cache?
ldconfig -p | wc -l  

4. Review the information in /etc/id.so.conf file and read some files inside the /etc/d.so.conf.d directory
cat /etc/id.so.conf
cd /etc/d.so.conf.d
more <file name>

5. Specify which libraries will be called if the echo command runs.
ldd /bin/echo

III. Create, monitor and kill process

6. Display all processes running in the server and describe the information on the screen.
ps -ef | more

7. Using top to monitor the system load and processes. Try to describe all the information on the screen.
top

8. Showing the help page of top and escape.
man top


Using screen

9. Type screen to create the first window screen.
screen

10. Issue top to monitoring system state.
top

11. Split the window into two regions (horizontal).
Ctrl + a + S

12. Jump to the bottom region. Do you get the shell prompt there?
Ctrl + a + Tab 
No 

13. Create a window within the bottom region to get the shell prompt.
Ctrl + a + C

14. Issue a command to view the from the end of /var/log/syslog in realtime mode.
sudo tail -f /var/log/syslog

15. Split the current window vertically.
Ctrl + a + I

1s. Now the focus is in the lower-left window. Jump to the lower-right Isus.
Ctrl + a + Tab

17. Escape the current window
Ctrl + a + D

18. List the screens existed in the server
screen -ls

19. Re-connect to your screen. Does the windows layout remain?
screen -r <screen id>

20. Kill the current screen by pressing Ctrl + a prefix and K
Ctrl + a + K


Using tmux

21. Type tmux to create the first window screen.
tmux

22. Issue top to monitoring system state.
top

23. Split the window into two regions (horizontal).
Ctrl + b + "

24. Jump to the bottom region. Do you get the shell prompt there?
25. Create a window within the bottom region to get the shell prompt.
không cần tạo window như screen

26. Issue a command to view the from the end of /var/log/syslog in realtime mode.
sudo tail -f /var/log/syslog

27. Split the current window vertically.
Ctrl + b + %

28. Now the focus is in the lower-left window. Jump to the lower-right focus.
Ctrl + b + o

29. Escape the current window
Crtl + b + d

30. List the screens existed in the server
tmux ls

31. Re-connect to your screen. Does the windows layout remain?
tmux attach-session -t <id>

32. Kill the current screen by pressing Ctrl+B prefix and K


-------------------------------------------------------------------------------------------------------------------------------------------------------------------

Lesson 5: Managing Software and Processes Part 3

I. Create, monitor and kill process (cont)

1. Login to the ubuntu system with the username and password provided.
cred: student/lpic1@123

2. List all the files and directories existed in your server in foreground using ls -R / command.
ls -R / 

3. Run the above command in background. Is there any information showed on your screen? Could you utilize the shell?
ls -R / & 
No information on screen. 

4. Re-do the step 3 but redirect stout and stderr of the command to a file named log. Could you utilize the shell now?
ls -R / & > log &

5. Run the command sleep 300 in background.
sleep 300 &

6. List all the background jobs in your system with their process id
jobs -l 

7. Kill the job created in step 5
kill %<id>

8. Run sleep 300 command in foreground
sleep 300

9. Move the process created in step 8 to background
Suspend process(Ctrl + Z) để lấy id rồi 
bg %<id>

10. Move back the above process to foreground
fg %<id>

11. Run the sleep 300 command in background, send the following signal to the process one by one and re-run the process after each. 
Using jobs command after sending the signal to confirm that you sent the correct signal.
    SIGTERM (mặc định)
    SIGINT (-2)
    SIGKILL (-9)
    SIGHUP (-1)
sleep 300 &
jobs -l
kill <pid> (các signal khác thêm option )
jobs (để kiểm tra trạng thái)

12. Run the sleep 300 command again and this time you have to ensure that the process will still be running after you logout. 
Specify the PPID of the process before and after you log-out.
nohup sleep 300 &
ps -ef | grep sleep
logout

13. Using the ps command to show the nice value of the running processes
ps -eo user,pid,ppid,ni,comm

14. Run the sleep 300 command in background with the nice value 10. Using ps command to display the nice value of the sleep process.
nice -n 10 sleep 300 &
ps -eo user,pid,ppid,ni,comm

15. Change the nice value of sleep process to -5. Using ps command to display the nice value after changing.
sudo renice -n -5 <pid của sleep>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

